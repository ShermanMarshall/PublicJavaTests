After further testing of the backlog issue, it seems as though the testing environment of concern (Firefox 43+ & Java EE7+) addresses the issue, somewhat unbeknownst to the programmer. The associated code in HarshConditions.html tries to imitate a heavy-load environment by pummelling a server with a number of requests.

The test logic follows:
	- For a number of iterations (10 is the default, unmodified value), 2500 requests will be sent to different paths of an HTTP host endpoint on a Java EE server.
	- Each request will cause a unique file to be created and stored on the server, as a persistent way of verifing a successful request.
	- The requests will be performed iteratively, with effectively no delay in between iterations--the goal is to overload the server's resources, consistently, and
	a continuous stream of requests is thought to be the best way to imitate production environments.
	
	Test results:
	Number of iterations	Number of requests	Number of created files		Number of reported failures
	10			2500			25000				0
	10			2500			25000				0
	5			2500			12500				0
	5			5000			25000				0

These conditions are meant to imitate production environments, where servers can be expected to deal with a number of requests from myriad users every second. The fear, was that given a number of requests, greater than the server's capacity to handle them in some unit of time, requests would eventually become lost due to the server's inability to handle them before new requests came in--the backlog queue of (TCP) connections, would be overrun, and there would be loss of data.

It seems, however, that I am not the first to address this concern. Testing on Firefox 43.0.2, failed requests appear to be repeated, independent of the user's application logic. RFC 2616 does not indicate a responsibility of the HTTP protocol to perform this repeat of unsuccessful requests, and I imagine other HTTP protocol-defining documents omit any such "requirement"; however, given the concerns raised, the fact that modern browsers and HTTP servers handle this additional condition is just another example of software that "just works". Quite effectively, as well; to provide additional praise of the software these tests warrant.
